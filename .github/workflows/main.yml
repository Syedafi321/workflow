name: Pull request from main to env branches

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  pr-to-env:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.JOSYS_GITHUB_TOKEN }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.JOSYS_GITHUB_TOKEN }}

      - name: Install Hub CLI
        run: |
          sudo snap install hub --classic

      - name: Create or Update Pull Requests to env branches
        id: create_prs
        run: |
          git fetch origin
          branches=("env/qay" "env/test")
          for branch in "${branches[@]}"; do
            echo "Checking if a pull request already exists for $branch"
            existing_pr=$(curl -s -X GET -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls?head=main&base=$branch")
            if [[ $(echo "$existing_pr" | jq -r ".[].head.ref") == "main" ]]; then
              echo "A pull request already exists from main to $branch."
              pr_url=$(echo "$existing_pr" | jq -r ".[0].html_url")
            else
              echo "Creating pull request from main to $branch"
              pr_url=$(hub pull-request -b $branch -h main -m "PR from main to $branch")
            fi
            echo "::set-output name=pr_url::$pr_url"

            # Manage Labels
            pr_number=$(echo $pr_url | awk -F/ '{print $NF}')
            merged_pr_number=${{ github.event.pull_request.number }}

            # Get labels from the merged PR
            labels=$(curl -s -X GET -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/$GITHUB_REPOSITORY/issues/$merged_pr_number/labels" | jq -r '.[].name')

            if [[ -z "$labels" ]]; then
              echo "No labels found on the merged PR. Removing labels from the new PR."
              curl -s -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/$GITHUB_REPOSITORY/issues/$pr_number/labels"
            else
              echo "Transferring labels to the new PR."
              for label in $labels; do
                curl -s -X POST -H "Authorization: Bearer $GITHUB_TOKEN" -H "Content-Type: application/json" \
                  --data "{\"labels\":[\"$label\"]}" "https://api.github.com/repos/$GITHUB_REPOSITORY/issues/$pr_number/labels"
              done
            fi
          done
