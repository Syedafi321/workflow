name: Daily Pull Request Report

on:
  schedule:
    - cron: '0 9 * * *'  # Runs at 9 AM UTC every day

jobs:
  generate-pr-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get open pull requests
        id: get-prs
        run: |
          prs=$(gh pr list --json number,title,author,createdAt,headRefName,baseRefName,changedFiles,reviewRequests --jq '
            map({
              number: .number,
              title: .title,
              author: .author.login,
              created_at: .createdAt,
              head_branch: .headRefName,
              base_branch: .baseRefName,
              changed_files: .changedFiles,
              reviewers: [.reviewRequests[].login] | join(", ")
            }) | tojson
          ')
          echo "prs=$prs" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.JOSYS_GITHUB_TOKEN }}

      - name: Generate report
        id: generate-report
        run: |
          prs='${{ steps.get-prs.outputs.prs }}'
          if [ "$prs" = "[]" ]; then
            echo "report=No open pull requests" >> $GITHUB_OUTPUT
          else
            report=""
            while read -r pr; do
              number=$(echo $pr | jq -r '.number')
              title=$(echo $pr | jq -r '.title')
              author=$(echo $pr | jq -r '.author')
              created_at=$(echo $pr | jq -r '.created_at')
              head_branch=$(echo $pr | jq -r '.head_branch')
              base_branch=$(echo $pr | jq -r '.base_branch')
              changed_files=$(echo $pr | jq -r '.changed_files')
              reviewers=$(echo $pr | jq -r '.reviewers')
              days_open=$(( ( $(date +%s) - $(date -d "$created_at" +%s) ) / 86400 ))
              
              report+="PR #$number: $title\n"
              report+="Created by: $author\n"
              report+="From: $head_branch -> $base_branch\n"
              report+="Files changed: $changed_files\n"
              report+="Days open: $days_open\n"
              report+="Reviewers: $reviewers\n\n"
            done <<< "$(echo $prs | jq -c '.[]')"
            echo "report<<EOF" >> $GITHUB_OUTPUT
            echo "$report" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Send to Slack
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "text": "Daily Pull Request Report:\n${{ steps.generate-report.outputs.report }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
